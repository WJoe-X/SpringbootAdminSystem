<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lenovo.bootstrap.mapper.MenuMapper">
	<resultMap id="BaseResultMap" type="com.lenovo.bootstrap.po.Menu">
		<id column="menu_id" jdbcType="VARCHAR" property="menuId" />
		<result column="menu_name" jdbcType="VARCHAR" property="menuName" />
		<result column="menu_type" jdbcType="VARCHAR" property="menuType" />
		<result column="menu_url" jdbcType="VARCHAR" property="menuUrl" />
		<result column="menu_code" jdbcType="VARCHAR" property="menuCode" />
		<result column="parent_id" jdbcType="VARCHAR" property="parentId" />
		<result column="parent_ids" jdbcType="VARCHAR" property="parentIds" />
		<result column="child_num" jdbcType="INTEGER" property="childNum" />
		<result column="listorder" jdbcType="INTEGER" property="listorder" />
		<result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
		<result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		menu_id, menu_name, menu_type, menu_url, menu_code, parent_id, parent_ids,
		child_num,
		listorder, created_at, updated_at
	</sql>
	<select id="selectByExample" parameterType="com.lenovo.bootstrap.po.MenuExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from menu
		where menu_id = #{menuId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from menu
		where menu_id = #{menuId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.lenovo.bootstrap.po.MenuExample">
		delete from menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.lenovo.bootstrap.po.Menu">
		insert into menu (menu_id, menu_name, menu_type,
		menu_url, menu_code, parent_id,
		parent_ids, child_num, listorder,
		created_at, updated_at)
		values (#{menuId,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR},
		#{menuType,jdbcType=VARCHAR},
		#{menuUrl,jdbcType=VARCHAR}, #{menuCode,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR},
		#{parentIds,jdbcType=VARCHAR}, #{childNum,jdbcType=INTEGER},
		#{listorder,jdbcType=INTEGER},
		#{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.lenovo.bootstrap.po.Menu">
		insert into menu
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="menuId != null">
				menu_id,
			</if>
			<if test="menuName != null">
				menu_name,
			</if>
			<if test="menuType != null">
				menu_type,
			</if>
			<if test="menuUrl != null">
				menu_url,
			</if>
			<if test="menuCode != null">
				menu_code,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="parentIds != null">
				parent_ids,
			</if>
			<if test="childNum != null">
				child_num,
			</if>
			<if test="listorder != null">
				listorder,
			</if>
			<if test="createdAt != null">
				created_at,
			</if>
			<if test="updatedAt != null">
				updated_at,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="menuId != null">
				#{menuId,jdbcType=VARCHAR},
			</if>
			<if test="menuName != null">
				#{menuName,jdbcType=VARCHAR},
			</if>
			<if test="menuType != null">
				#{menuType,jdbcType=VARCHAR},
			</if>
			<if test="menuUrl != null">
				#{menuUrl,jdbcType=VARCHAR},
			</if>
			<if test="menuCode != null">
				#{menuCode,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=VARCHAR},
			</if>
			<if test="parentIds != null">
				#{parentIds,jdbcType=VARCHAR},
			</if>
			<if test="childNum != null">
				#{childNum,jdbcType=INTEGER},
			</if>
			<if test="listorder != null">
				#{listorder,jdbcType=INTEGER},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.lenovo.bootstrap.po.MenuExample"
		resultType="java.lang.Long">
		select count(*) from menu
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update menu
		<set>
			<if test="record.menuId != null">
				menu_id = #{record.menuId,jdbcType=VARCHAR},
			</if>
			<if test="record.menuName != null">
				menu_name = #{record.menuName,jdbcType=VARCHAR},
			</if>
			<if test="record.menuType != null">
				menu_type = #{record.menuType,jdbcType=VARCHAR},
			</if>
			<if test="record.menuUrl != null">
				menu_url = #{record.menuUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.menuCode != null">
				menu_code = #{record.menuCode,jdbcType=VARCHAR},
			</if>
			<if test="record.parentId != null">
				parent_id = #{record.parentId,jdbcType=VARCHAR},
			</if>
			<if test="record.parentIds != null">
				parent_ids = #{record.parentIds,jdbcType=VARCHAR},
			</if>
			<if test="record.childNum != null">
				child_num = #{record.childNum,jdbcType=INTEGER},
			</if>
			<if test="record.listorder != null">
				listorder = #{record.listorder,jdbcType=INTEGER},
			</if>
			<if test="record.createdAt != null">
				created_at = #{record.createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatedAt != null">
				updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update menu
		set menu_id = #{record.menuId,jdbcType=VARCHAR},
		menu_name = #{record.menuName,jdbcType=VARCHAR},
		menu_type = #{record.menuType,jdbcType=VARCHAR},
		menu_url = #{record.menuUrl,jdbcType=VARCHAR},
		menu_code = #{record.menuCode,jdbcType=VARCHAR},
		parent_id = #{record.parentId,jdbcType=VARCHAR},
		parent_ids = #{record.parentIds,jdbcType=VARCHAR},
		child_num = #{record.childNum,jdbcType=INTEGER},
		listorder = #{record.listorder,jdbcType=INTEGER},
		created_at = #{record.createdAt,jdbcType=TIMESTAMP},
		updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.lenovo.bootstrap.po.Menu">
		update menu
		<set>
			<if test="menuName != null">
				menu_name = #{menuName,jdbcType=VARCHAR},
			</if>
			<if test="menuType != null">
				menu_type = #{menuType,jdbcType=VARCHAR},
			</if>
			<if test="menuUrl != null">
				menu_url = #{menuUrl,jdbcType=VARCHAR},
			</if>
			<if test="menuCode != null">
				menu_code = #{menuCode,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=VARCHAR},
			</if>
			<if test="parentIds != null">
				parent_ids = #{parentIds,jdbcType=VARCHAR},
			</if>
			<if test="childNum != null">
				child_num = #{childNum,jdbcType=INTEGER},
			</if>
			<if test="listorder != null">
				listorder = #{listorder,jdbcType=INTEGER},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
		</set>
		where menu_id = #{menuId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lenovo.bootstrap.po.Menu">
		update menu
		set menu_name = #{menuName,jdbcType=VARCHAR},
		menu_type = #{menuType,jdbcType=VARCHAR},
		menu_url = #{menuUrl,jdbcType=VARCHAR},
		menu_code = #{menuCode,jdbcType=VARCHAR},
		parent_id = #{parentId,jdbcType=VARCHAR},
		parent_ids = #{parentIds,jdbcType=VARCHAR},
		child_num = #{childNum,jdbcType=INTEGER},
		listorder = #{listorder,jdbcType=INTEGER},
		created_at = #{createdAt,jdbcType=TIMESTAMP},
		updated_at = #{updatedAt,jdbcType=TIMESTAMP}
		where menu_id = #{menuId,jdbcType=VARCHAR}
	</update>


	<!-- 根据用用户ID查询权限code -->
	<select id="findMenuCodeByUserId" parameterType="String"
		resultType="java.lang.String">
		select m.menu_code from menu m , role_menu rm, admin_role ar where
		ar.admin_id =#{id} and m.menu_id = rm.menu_id and rm.role_id =
		ar.role_id
	</select>


	<resultMap id="queryResulpMap" type="com.lenovo.bootstrap.vo.MenuVo">
		<id column="menu_id" property="menuId" jdbcType="VARCHAR" />
		<result column="menu_name" property="menuName" jdbcType="VARCHAR" />
		<result column="menu_type" property="menuType" jdbcType="VARCHAR" />
		<result column="menu_url" property="menuUrl" jdbcType="VARCHAR" />
		<result column="menu_code" property="menuCode" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="child_num" property="childNum" jdbcType="INTEGER" />
		<collection property="adminList" javaType="java.util.List"
			ofType="com.lenovo.bootstrap.po.Admin">
			<id column="adminid" jdbcType="VARCHAR" property="uid" />
			<result column="username" jdbcType="VARCHAR" property="username" />
			<result column="state" jdbcType="INTEGER" property="state" />
		</collection>
		<collection property="roleList" javaType="java.util.List"
			ofType="com.lenovo.bootstrap.po.Role">
			<id column="role_id" jdbcType="VARCHAR" property="roleId" />
			<result column="role_name" jdbcType="VARCHAR" property="roleName" />
			<result column="enable" jdbcType="INTEGER" property="enable" />
		</collection>
	</resultMap>

	<sql id="menuField">
		select m.menu_id, m.menu_name, m.menu_type, m.menu_url, m.menu_code,
		m.parent_id, r.role_id as roleid ,r.role_name,r.enable,a.uid as
		adminid,a.username,a.state
	</sql>

	<select id="selectMenuByAdminId" parameterType="String"
		resultMap="queryResulpMap">
		<include refid="menuField" />
		from menu m
		left join role_menu rm on m.menu_id = rm.menu_id
		left join role r on r.role_id = rm.role_id
		left join admin_role ar on r.role_id = ar.role_id
		left join admin a on a.uid = ar.admin_id
		where a.uid = #{id, jdbcType=VARCHAR} and r.enable = 1 and m.menu_type
		&lt;&gt; 'button'
		order by m.listorder asc,m.created_at asc
	</select>

	<select id="selectAllMenu" parameterType="String" resultMap="queryResulpMap">
		<include refid="menuField" />
		from menu m
		left join role_menu rm on m.menu_id = rm.menu_id
		left join role r on r.role_id = rm.role_id
		left join admin_role ar on r.role_id = ar.role_id
		left join admin a on a.uid = ar.admin_id
		where m.menu_type &lt;&gt; 'button'
		order by m.listorder asc,m.created_at asc
	</select>

	<select id="selectMenuByRoleId" parameterType="String"
		resultMap="BaseResultMap">
		select m.* from role_menu rm left join menu m on rm.menu_id = m.menu_id
		where rm.role_id=#{id, jdbcType=VARCHAR}
	</select>

</mapper>